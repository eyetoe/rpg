<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  

  <head>
    <title>
      /examples/graph.py – Urwid
    </title>
        <link rel="search" href="/urwid/search" />
        <link rel="help" href="/urwid/wiki/TracGuide" />
        <link rel="alternate" href="/urwid/browser/examples/graph.py?format=txt" type="text/plain" title="Plain Text" /><link rel="alternate" href="/urwid/export/984%3Ad6071ec65299/examples/graph.py" type="text/x-python; charset=utf-8" title="Original Format" />
        <link rel="up" href="/urwid/browser/examples" title="Parent directory" />
        <link rel="start" href="/urwid/wiki" />
        <link rel="stylesheet" href="/urwid/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/urwid/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/urwid/pygments/trac.css" type="text/css" /><link rel="stylesheet" href="/urwid/chrome/common/css/browser.css" type="text/css" />
        <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/favicon.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/urwid/search/opensearch" title="Search Urwid" />
    <script type="text/javascript" src="/urwid/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/urwid/chrome/common/js/trac.js"></script><script type="text/javascript" src="/urwid/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/urwid/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        })
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://excess.org/urwid/"><img src="/urwid/info001.png" alt="Urwid" height="50" width="150" /></a>
      </div>
      <form id="search" action="/urwid/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/urwid/login">Login</a></li><li><a href="/urwid/wiki/TracGuide">Help/Guide</a></li><li><a href="/urwid/about">About Trac</a></li><li><a href="/urwid/prefs">Preferences</a></li><li class="last"><a href="/urwid/register">Register</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/urwid/wiki">Wiki</a></li><li><a href="/urwid/timeline">Timeline</a></li><li><a href="/urwid/roadmap">Roadmap</a></li><li class="active"><a href="/urwid/browser">Browse Source</a></li><li><a href="/urwid/report">View Tickets</a></li><li class="last"><a href="/urwid/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><a href="/urwid/changeset/661%3A24cf14eac74f/examples/graph.py">Last Change</a></li><li><a href="/urwid/browser/examples/graph.py?annotate=blame&amp;rev=661%3A24cf14eac74f" title="Annotate each line with the last changed revision (this can be time consuming...)">Annotate</a></li><li class="last"><a href="/urwid/log/examples/graph.py">Revision Log</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
      <h1>
    <a class="pathentry first" title="Go to root directory" href="/urwid/browser">root</a><span class="pathentry sep">/</span><a class="pathentry" title="View examples" href="/urwid/browser/examples">examples</a><span class="pathentry sep">/</span><a class="pathentry" title="View graph.py" href="/urwid/browser/examples/graph.py">graph.py</a>
    <br style="clear: both" />
  </h1>
      <div id="jumprev">
        <form action="" method="get">
          <div>
            <label for="rev">
              View revision:</label>
            <input type="text" id="rev" name="rev" size="6" />
          </div>
        </form>
      </div>
      <div id="jumploc">
        <form action="" method="get">
          <div class="buttons">
            <label for="preselected">Visit:</label>
            <select id="preselected" name="preselected">
              <option selected="selected"></option>
              <optgroup label="branches">
                <option value="/urwid/browser/?rev=984%3Ad6071ec65299">default</option><option value="/urwid/browser/?rev=983%3Afb12872964c0">stable-1.1</option><option value="/urwid/browser/?rev=967%3A8d8ab02fb23f">stable-1.0</option><option value="/urwid/browser/?rev=906%3A4c76eaf52f56">feature-containers</option><option value="/urwid/browser/?rev=905%3A992684bb8aaf">feature-sphinx</option><option value="/urwid/browser/?rev=658%3Ab451e1bce91f">stable-0.9.9</option><option value="/urwid/browser/?rev=547%3Aa7bbf31723ec">python3</option><option value="/urwid/browser/?rev=516%3A6a50ee98e121">idle</option><option value="/urwid/browser/?rev=515%3Ad3ee5a3dda3c">glib</option>
              </optgroup><optgroup label="tags">
                <option value="/urwid/browser/?rev=984%3Ad6071ec65299">tip</option><option value="/urwid/browser/?rev=968%3A0b6e52fa478a">release-1.1.1</option><option value="/urwid/browser/?rev=965%3Ad6ac41030748">release-1.0.3</option><option value="/urwid/browser/?rev=954%3A19012001f152">release-1.1.0</option><option value="/urwid/browser/?rev=818%3A0dbd86bab1f2">release-1.0.2</option><option value="/urwid/browser/?rev=656%3A0b46d54a527e">release-1.0.1</option><option value="/urwid/browser/?rev=641%3A0cb6dd176164">release-0.9.9.3</option><option value="/urwid/browser/?rev=615%3A36a3475de956">release-1.0.0</option><option value="/urwid/browser/?rev=576%3A4701bc9ea3f1">release-0.9.9.2</option><option value="/urwid/browser/?rev=305%3Af445b883a200">release-0.9.9.1</option><option value="/urwid/browser/?rev=292%3A167d78b81824">release-0.9.9</option><option value="/urwid/browser/?rev=65%3Af71120f89f4a">release-0.9.8</option><option value="/urwid/browser/?rev=26%3A80fb799e57f6">release-0.9.7.2</option><option value="/urwid/browser/?rev=23%3A6940f8e182d1">release-0.9.7.1</option><option value="/urwid/browser/?rev=22%3A51ae19b2d071">release-0.9.7</option><option value="/urwid/browser/?rev=21%3Ae985496ab59f">release-0.9.6</option><option value="/urwid/browser/?rev=20%3A724fa210dbd7">release-0.9.5</option><option value="/urwid/browser/?rev=19%3A55a4dbaf0f4c">release-0.9.4</option><option value="/urwid/browser/?rev=18%3A3e41e992e58d">release-0.9.3</option><option value="/urwid/browser/?rev=17%3A77fad9b941bd">release-0.9.2</option><option value="/urwid/browser/?rev=16%3Af523745d15d4">release-0.9.1</option><option value="/urwid/browser/?rev=15%3A00ecfc18e7a3">release-0.9.0</option><option value="/urwid/browser/?rev=14%3A4d54f0d3d092">release-0.9.0-pre3</option><option value="/urwid/browser/?rev=13%3Aa32c3d617c3c">release-0.9.0-pre2</option><option value="/urwid/browser/?rev=12%3Ad8ccab6cab52">release-0.9.0-pre1</option><option value="/urwid/browser/?rev=11%3A75e410b77de0">release-0.8.10</option><option value="/urwid/browser/?rev=10%3Ab08a823827c3">release-0.8.9</option><option value="/urwid/browser/?rev=9%3A9488661c4e88">release-0.8.8</option><option value="/urwid/browser/?rev=8%3A20d334bf7f99">release-0.8.7</option><option value="/urwid/browser/?rev=7%3A4a94ee84f10a">release-0.8.6</option><option value="/urwid/browser/?rev=6%3A0836e10d9971">release-0.8.5</option><option value="/urwid/browser/?rev=5%3A9fc455b9845b">release-0.8.4</option><option value="/urwid/browser/?rev=4%3Abac46c2f4010">release-0.8.3</option><option value="/urwid/browser/?rev=3%3Aea35d3af1d66">release-0.8.2</option><option value="/urwid/browser/?rev=2%3A8635df78aaf5">release-0.8.1</option><option value="/urwid/browser/?rev=1%3A77ca4911a81a">release-0.8.0</option>
              </optgroup>
            </select>
            <input type="submit" value="Go!" title="Jump to the chosen preselected path" />
          </div>
        </form>
      </div>
      <table id="info" summary="Revision info">
        <tr>
          <th scope="col">
            Revision <a href="/urwid/changeset/661%3A24cf14eac74f">661:24cf14eac74f</a>, <span title="11971 bytes">11.7 KB</span>
            (checked in by Ian Ward &lt;ian@…&gt;, <a class="timeline" href="/urwid/timeline?from=2011-11-29T00%3A20%3A13-0500&amp;precision=second" title="2011-11-29T00:20:13-0500 in Timeline">2 years</a> ago)
          </th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
move examples to examples/<br />
</p>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <ul class="props">
              <li>
                  Property <strong>exe</strong> set to
                    <em><code>*</code></em>
              </li>
            </ul>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
    <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td><span class="c">#!/usr/bin/python</span></td></tr><tr><th id="L2"><a href="#L2">2</a></th><td><span class="c">#</span></td></tr><tr><th id="L3"><a href="#L3">3</a></th><td><span class="c"># Urwid graphics example program</span></td></tr><tr><th id="L4"><a href="#L4">4</a></th><td><span class="c">#    Copyright (C) 2004-2011  Ian Ward</span></td></tr><tr><th id="L5"><a href="#L5">5</a></th><td><span class="c">#</span></td></tr><tr><th id="L6"><a href="#L6">6</a></th><td><span class="c">#    This library is free software; you can redistribute it and/or</span></td></tr><tr><th id="L7"><a href="#L7">7</a></th><td><span class="c">#    modify it under the terms of the GNU Lesser General Public</span></td></tr><tr><th id="L8"><a href="#L8">8</a></th><td><span class="c">#    License as published by the Free Software Foundation; either</span></td></tr><tr><th id="L9"><a href="#L9">9</a></th><td><span class="c">#    version 2.1 of the License, or (at your option) any later version.</span></td></tr><tr><th id="L10"><a href="#L10">10</a></th><td><span class="c">#</span></td></tr><tr><th id="L11"><a href="#L11">11</a></th><td><span class="c">#    This library is distributed in the hope that it will be useful,</span></td></tr><tr><th id="L12"><a href="#L12">12</a></th><td><span class="c">#    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></td></tr><tr><th id="L13"><a href="#L13">13</a></th><td><span class="c">#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span></td></tr><tr><th id="L14"><a href="#L14">14</a></th><td><span class="c">#    Lesser General Public License for more details.</span></td></tr><tr><th id="L15"><a href="#L15">15</a></th><td><span class="c">#</span></td></tr><tr><th id="L16"><a href="#L16">16</a></th><td><span class="c">#    You should have received a copy of the GNU Lesser General Public</span></td></tr><tr><th id="L17"><a href="#L17">17</a></th><td><span class="c">#    License along with this library; if not, write to the Free Software</span></td></tr><tr><th id="L18"><a href="#L18">18</a></th><td><span class="c">#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span></td></tr><tr><th id="L19"><a href="#L19">19</a></th><td><span class="c">#</span></td></tr><tr><th id="L20"><a href="#L20">20</a></th><td><span class="c"># Urwid web site: http://excess.org/urwid/</span></td></tr><tr><th id="L21"><a href="#L21">21</a></th><td></td></tr><tr><th id="L22"><a href="#L22">22</a></th><td><span class="sd">"""</span></td></tr><tr><th id="L23"><a href="#L23">23</a></th><td><span class="sd">Urwid example demonstrating use of the BarGraph widget and creating a </span></td></tr><tr><th id="L24"><a href="#L24">24</a></th><td><span class="sd">floating-window appearance.  Also shows use of alarms to create timed</span></td></tr><tr><th id="L25"><a href="#L25">25</a></th><td><span class="sd">animation.</span></td></tr><tr><th id="L26"><a href="#L26">26</a></th><td><span class="sd">"""</span></td></tr><tr><th id="L27"><a href="#L27">27</a></th><td></td></tr><tr><th id="L28"><a href="#L28">28</a></th><td><span class="k">import</span> <span class="nn">urwid</span></td></tr><tr><th id="L29"><a href="#L29">29</a></th><td></td></tr><tr><th id="L30"><a href="#L30">30</a></th><td><span class="k">import</span> <span class="nn">math</span></td></tr><tr><th id="L31"><a href="#L31">31</a></th><td><span class="k">import</span> <span class="nn">time</span></td></tr><tr><th id="L32"><a href="#L32">32</a></th><td></td></tr><tr><th id="L33"><a href="#L33">33</a></th><td>UPDATE_INTERVAL <span class="o">=</span> <span class="mf">0.2</span></td></tr><tr><th id="L34"><a href="#L34">34</a></th><td></td></tr><tr><th id="L35"><a href="#L35">35</a></th><td><span class="k">def</span> <span class="nf">sin100</span><span class="p">(</span> x <span class="p">):</span></td></tr><tr><th id="L36"><a href="#L36">36</a></th><td>    <span class="sd">""" </span></td></tr><tr><th id="L37"><a href="#L37">37</a></th><td><span class="sd">    A sin function that returns values between 0 and 100 and repeats</span></td></tr><tr><th id="L38"><a href="#L38">38</a></th><td><span class="sd">    after x == 100.</span></td></tr><tr><th id="L39"><a href="#L39">39</a></th><td><span class="sd">    """</span></td></tr><tr><th id="L40"><a href="#L40">40</a></th><td>    <span class="k">return</span> <span class="mf">50</span> <span class="o">+</span> <span class="mf">50</span> <span class="o">*</span> math<span class="o">.</span>sin<span class="p">(</span> x <span class="o">*</span> math<span class="o">.</span>pi <span class="o">/</span> <span class="mf">50</span> <span class="p">)</span></td></tr><tr><th id="L41"><a href="#L41">41</a></th><td>    </td></tr><tr><th id="L42"><a href="#L42">42</a></th><td><span class="k">class</span> <span class="nc">GraphModel</span><span class="p">:</span></td></tr><tr><th id="L43"><a href="#L43">43</a></th><td>    <span class="sd">"""</span></td></tr><tr><th id="L44"><a href="#L44">44</a></th><td><span class="sd">    A class responsible for storing the data that will be displayed</span></td></tr><tr><th id="L45"><a href="#L45">45</a></th><td><span class="sd">    on the graph, and keeping track of which mode is enabled.</span></td></tr><tr><th id="L46"><a href="#L46">46</a></th><td><span class="sd">    """</span></td></tr><tr><th id="L47"><a href="#L47">47</a></th><td></td></tr><tr><th id="L48"><a href="#L48">48</a></th><td>    data_max_value <span class="o">=</span> <span class="mf">100</span></td></tr><tr><th id="L49"><a href="#L49">49</a></th><td>    </td></tr><tr><th id="L50"><a href="#L50">50</a></th><td>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L51"><a href="#L51">51</a></th><td>        data <span class="o">=</span> <span class="p">[</span> <span class="p">(</span><span class="s">'Saw'</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mf">0</span><span class="p">,</span><span class="mf">100</span><span class="p">,</span><span class="mf">2</span><span class="p">)</span><span class="o">*</span><span class="mf">2</span><span class="p">),</span></td></tr><tr><th id="L52"><a href="#L52">52</a></th><td>            <span class="p">(</span><span class="s">'Square'</span><span class="p">,</span> <span class="p">[</span><span class="mf">0</span><span class="p">]</span><span class="o">*</span><span class="mf">30</span> <span class="o">+</span> <span class="p">[</span><span class="mf">100</span><span class="p">]</span><span class="o">*</span><span class="mf">30</span><span class="p">),</span></td></tr><tr><th id="L53"><a href="#L53">53</a></th><td>            <span class="p">(</span><span class="s">'Sine 1'</span><span class="p">,</span> <span class="p">[</span>sin100<span class="p">(</span>x<span class="p">)</span> <span class="k">for</span> x <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mf">100</span><span class="p">)]</span> <span class="p">),</span></td></tr><tr><th id="L54"><a href="#L54">54</a></th><td>            <span class="p">(</span><span class="s">'Sine 2'</span><span class="p">,</span> <span class="p">[(</span>sin100<span class="p">(</span>x<span class="p">)</span> <span class="o">+</span> sin100<span class="p">(</span>x<span class="o">*</span><span class="mf">2</span><span class="p">))</span><span class="o">/</span><span class="mf">2</span> </td></tr><tr><th id="L55"><a href="#L55">55</a></th><td>                <span class="k">for</span> x <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mf">100</span><span class="p">)]</span> <span class="p">),</span></td></tr><tr><th id="L56"><a href="#L56">56</a></th><td>            <span class="p">(</span><span class="s">'Sine 3'</span><span class="p">,</span> <span class="p">[(</span>sin100<span class="p">(</span>x<span class="p">)</span> <span class="o">+</span> sin100<span class="p">(</span>x<span class="o">*</span><span class="mf">3</span><span class="p">))</span><span class="o">/</span><span class="mf">2</span> </td></tr><tr><th id="L57"><a href="#L57">57</a></th><td>                <span class="k">for</span> x <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mf">100</span><span class="p">)]</span> <span class="p">),</span></td></tr><tr><th id="L58"><a href="#L58">58</a></th><td>            <span class="p">]</span></td></tr><tr><th id="L59"><a href="#L59">59</a></th><td>        <span class="bp">self</span><span class="o">.</span>modes <span class="o">=</span> <span class="p">[]</span></td></tr><tr><th id="L60"><a href="#L60">60</a></th><td>        <span class="bp">self</span><span class="o">.</span>data <span class="o">=</span> <span class="p">{}</span></td></tr><tr><th id="L61"><a href="#L61">61</a></th><td>        <span class="k">for</span> m<span class="p">,</span> d <span class="ow">in</span> data<span class="p">:</span></td></tr><tr><th id="L62"><a href="#L62">62</a></th><td>            <span class="bp">self</span><span class="o">.</span>modes<span class="o">.</span>append<span class="p">(</span>m<span class="p">)</span></td></tr><tr><th id="L63"><a href="#L63">63</a></th><td>            <span class="bp">self</span><span class="o">.</span>data<span class="p">[</span>m<span class="p">]</span> <span class="o">=</span> d</td></tr><tr><th id="L64"><a href="#L64">64</a></th><td>    </td></tr><tr><th id="L65"><a href="#L65">65</a></th><td>    <span class="k">def</span> <span class="nf">get_modes</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L66"><a href="#L66">66</a></th><td>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span>modes</td></tr><tr><th id="L67"><a href="#L67">67</a></th><td>    </td></tr><tr><th id="L68"><a href="#L68">68</a></th><td>    <span class="k">def</span> <span class="nf">set_mode</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> m<span class="p">):</span></td></tr><tr><th id="L69"><a href="#L69">69</a></th><td>        <span class="bp">self</span><span class="o">.</span>current_mode <span class="o">=</span> m</td></tr><tr><th id="L70"><a href="#L70">70</a></th><td>    </td></tr><tr><th id="L71"><a href="#L71">71</a></th><td>    <span class="k">def</span> <span class="nf">get_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> offset<span class="p">,</span> r<span class="p">):</span></td></tr><tr><th id="L72"><a href="#L72">72</a></th><td>        <span class="sd">"""</span></td></tr><tr><th id="L73"><a href="#L73">73</a></th><td><span class="sd">        Return the data in [offset:offset+r], the maximum value</span></td></tr><tr><th id="L74"><a href="#L74">74</a></th><td><span class="sd">        for items returned, and the offset at which the data</span></td></tr><tr><th id="L75"><a href="#L75">75</a></th><td><span class="sd">        repeats.</span></td></tr><tr><th id="L76"><a href="#L76">76</a></th><td><span class="sd">        """</span></td></tr><tr><th id="L77"><a href="#L77">77</a></th><td>        l <span class="o">=</span> <span class="p">[]</span></td></tr><tr><th id="L78"><a href="#L78">78</a></th><td>        d <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>data<span class="p">[</span><span class="bp">self</span><span class="o">.</span>current_mode<span class="p">]</span></td></tr><tr><th id="L79"><a href="#L79">79</a></th><td>        <span class="k">while</span> r<span class="p">:</span></td></tr><tr><th id="L80"><a href="#L80">80</a></th><td>            offset <span class="o">=</span> offset <span class="o">%</span> <span class="nb">len</span><span class="p">(</span>d<span class="p">)</span></td></tr><tr><th id="L81"><a href="#L81">81</a></th><td>            segment <span class="o">=</span> d<span class="p">[</span>offset<span class="p">:</span>offset<span class="o">+</span>r<span class="p">]</span></td></tr><tr><th id="L82"><a href="#L82">82</a></th><td>            r <span class="o">-=</span> <span class="nb">len</span><span class="p">(</span>segment<span class="p">)</span></td></tr><tr><th id="L83"><a href="#L83">83</a></th><td>            offset <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span>segment<span class="p">)</span></td></tr><tr><th id="L84"><a href="#L84">84</a></th><td>            l <span class="o">+=</span> segment</td></tr><tr><th id="L85"><a href="#L85">85</a></th><td>        <span class="k">return</span> l<span class="p">,</span> <span class="bp">self</span><span class="o">.</span>data_max_value<span class="p">,</span> <span class="nb">len</span><span class="p">(</span>d<span class="p">)</span></td></tr><tr><th id="L86"><a href="#L86">86</a></th><td></td></tr><tr><th id="L87"><a href="#L87">87</a></th><td></td></tr><tr><th id="L88"><a href="#L88">88</a></th><td><span class="k">class</span> <span class="nc">GraphView</span><span class="p">(</span>urwid<span class="o">.</span>WidgetWrap<span class="p">):</span></td></tr><tr><th id="L89"><a href="#L89">89</a></th><td>    <span class="sd">"""</span></td></tr><tr><th id="L90"><a href="#L90">90</a></th><td><span class="sd">    A class responsible for providing the application's interface and</span></td></tr><tr><th id="L91"><a href="#L91">91</a></th><td><span class="sd">    graph display.</span></td></tr><tr><th id="L92"><a href="#L92">92</a></th><td><span class="sd">    """</span></td></tr><tr><th id="L93"><a href="#L93">93</a></th><td>    palette <span class="o">=</span> <span class="p">[</span></td></tr><tr><th id="L94"><a href="#L94">94</a></th><td>        <span class="p">(</span><span class="s">'body'</span><span class="p">,</span>         <span class="s">'black'</span><span class="p">,</span>      <span class="s">'light gray'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L95"><a href="#L95">95</a></th><td>        <span class="p">(</span><span class="s">'header'</span><span class="p">,</span>       <span class="s">'white'</span><span class="p">,</span>      <span class="s">'dark red'</span><span class="p">,</span>   <span class="s">'bold'</span><span class="p">),</span></td></tr><tr><th id="L96"><a href="#L96">96</a></th><td>        <span class="p">(</span><span class="s">'screen edge'</span><span class="p">,</span>  <span class="s">'light blue'</span><span class="p">,</span> <span class="s">'dark cyan'</span><span class="p">),</span></td></tr><tr><th id="L97"><a href="#L97">97</a></th><td>        <span class="p">(</span><span class="s">'main shadow'</span><span class="p">,</span>  <span class="s">'dark gray'</span><span class="p">,</span>  <span class="s">'black'</span><span class="p">),</span></td></tr><tr><th id="L98"><a href="#L98">98</a></th><td>        <span class="p">(</span><span class="s">'line'</span><span class="p">,</span>         <span class="s">'black'</span><span class="p">,</span>      <span class="s">'light gray'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L99"><a href="#L99">99</a></th><td>        <span class="p">(</span><span class="s">'bg background'</span><span class="p">,</span><span class="s">'light gray'</span><span class="p">,</span> <span class="s">'black'</span><span class="p">),</span></td></tr><tr><th id="L100"><a href="#L100">100</a></th><td>        <span class="p">(</span><span class="s">'bg 1'</span><span class="p">,</span>         <span class="s">'black'</span><span class="p">,</span>      <span class="s">'dark blue'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L101"><a href="#L101">101</a></th><td>        <span class="p">(</span><span class="s">'bg 1 smooth'</span><span class="p">,</span>  <span class="s">'dark blue'</span><span class="p">,</span>  <span class="s">'black'</span><span class="p">),</span></td></tr><tr><th id="L102"><a href="#L102">102</a></th><td>        <span class="p">(</span><span class="s">'bg 2'</span><span class="p">,</span>         <span class="s">'black'</span><span class="p">,</span>      <span class="s">'dark cyan'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L103"><a href="#L103">103</a></th><td>        <span class="p">(</span><span class="s">'bg 2 smooth'</span><span class="p">,</span>  <span class="s">'dark cyan'</span><span class="p">,</span>  <span class="s">'black'</span><span class="p">),</span></td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>        <span class="p">(</span><span class="s">'button normal'</span><span class="p">,</span><span class="s">'light gray'</span><span class="p">,</span> <span class="s">'dark blue'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L105"><a href="#L105">105</a></th><td>        <span class="p">(</span><span class="s">'button select'</span><span class="p">,</span><span class="s">'white'</span><span class="p">,</span>      <span class="s">'dark green'</span><span class="p">),</span></td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>        <span class="p">(</span><span class="s">'line'</span><span class="p">,</span>         <span class="s">'black'</span><span class="p">,</span>      <span class="s">'light gray'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L107"><a href="#L107">107</a></th><td>        <span class="p">(</span><span class="s">'pg normal'</span><span class="p">,</span>    <span class="s">'white'</span><span class="p">,</span>      <span class="s">'black'</span><span class="p">,</span> <span class="s">'standout'</span><span class="p">),</span></td></tr><tr><th id="L108"><a href="#L108">108</a></th><td>        <span class="p">(</span><span class="s">'pg complete'</span><span class="p">,</span>  <span class="s">'white'</span><span class="p">,</span>      <span class="s">'dark magenta'</span><span class="p">),</span></td></tr><tr><th id="L109"><a href="#L109">109</a></th><td>        <span class="p">(</span><span class="s">'pg smooth'</span><span class="p">,</span>     <span class="s">'dark magenta'</span><span class="p">,</span><span class="s">'black'</span><span class="p">)</span></td></tr><tr><th id="L110"><a href="#L110">110</a></th><td>        <span class="p">]</span></td></tr><tr><th id="L111"><a href="#L111">111</a></th><td>        </td></tr><tr><th id="L112"><a href="#L112">112</a></th><td>    graph_samples_per_bar <span class="o">=</span> <span class="mf">10</span></td></tr><tr><th id="L113"><a href="#L113">113</a></th><td>    graph_num_bars <span class="o">=</span> <span class="mf">5</span></td></tr><tr><th id="L114"><a href="#L114">114</a></th><td>    graph_offset_per_second <span class="o">=</span> <span class="mf">5</span></td></tr><tr><th id="L115"><a href="#L115">115</a></th><td>    </td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> controller<span class="p">):</span></td></tr><tr><th id="L117"><a href="#L117">117</a></th><td>        <span class="bp">self</span><span class="o">.</span>controller <span class="o">=</span> controller</td></tr><tr><th id="L118"><a href="#L118">118</a></th><td>        <span class="bp">self</span><span class="o">.</span>started <span class="o">=</span> <span class="bp">True</span></td></tr><tr><th id="L119"><a href="#L119">119</a></th><td>        <span class="bp">self</span><span class="o">.</span>start_time <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L120"><a href="#L120">120</a></th><td>        <span class="bp">self</span><span class="o">.</span>offset <span class="o">=</span> <span class="mf">0</span></td></tr><tr><th id="L121"><a href="#L121">121</a></th><td>        <span class="bp">self</span><span class="o">.</span>last_offset <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L122"><a href="#L122">122</a></th><td>        urwid<span class="o">.</span>WidgetWrap<span class="o">.</span>__init__<span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span>main_window<span class="p">())</span></td></tr><tr><th id="L123"><a href="#L123">123</a></th><td></td></tr><tr><th id="L124"><a href="#L124">124</a></th><td>    <span class="k">def</span> <span class="nf">get_offset_now</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L125"><a href="#L125">125</a></th><td>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span>start_time <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span></td></tr><tr><th id="L126"><a href="#L126">126</a></th><td>            <span class="k">return</span> <span class="mf">0</span></td></tr><tr><th id="L127"><a href="#L127">127</a></th><td>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span>started<span class="p">:</span></td></tr><tr><th id="L128"><a href="#L128">128</a></th><td>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span>offset</td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>        tdelta <span class="o">=</span> time<span class="o">.</span>time<span class="p">()</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span>start_time</td></tr><tr><th id="L130"><a href="#L130">130</a></th><td>        <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span>offset <span class="o">+</span> <span class="p">(</span>tdelta<span class="o">*</span><span class="bp">self</span><span class="o">.</span>graph_offset_per_second<span class="p">))</span></td></tr><tr><th id="L131"><a href="#L131">131</a></th><td></td></tr><tr><th id="L132"><a href="#L132">132</a></th><td>    <span class="k">def</span> <span class="nf">update_graph</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> force_update<span class="o">=</span><span class="bp">False</span><span class="p">):</span></td></tr><tr><th id="L133"><a href="#L133">133</a></th><td>        o <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>get_offset_now<span class="p">()</span></td></tr><tr><th id="L134"><a href="#L134">134</a></th><td>        <span class="k">if</span> o <span class="o">==</span> <span class="bp">self</span><span class="o">.</span>last_offset <span class="ow">and</span> <span class="ow">not</span> force_update<span class="p">:</span></td></tr><tr><th id="L135"><a href="#L135">135</a></th><td>            <span class="k">return</span> <span class="bp">False</span></td></tr><tr><th id="L136"><a href="#L136">136</a></th><td>        <span class="bp">self</span><span class="o">.</span>last_offset <span class="o">=</span> o</td></tr><tr><th id="L137"><a href="#L137">137</a></th><td>        gspb <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>graph_samples_per_bar</td></tr><tr><th id="L138"><a href="#L138">138</a></th><td>        r <span class="o">=</span> gspb <span class="o">*</span> <span class="bp">self</span><span class="o">.</span>graph_num_bars</td></tr><tr><th id="L139"><a href="#L139">139</a></th><td>        d<span class="p">,</span> max_value<span class="p">,</span> repeat <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>controller<span class="o">.</span>get_data<span class="p">(</span> o<span class="p">,</span> r <span class="p">)</span></td></tr><tr><th id="L140"><a href="#L140">140</a></th><td>        l <span class="o">=</span> <span class="p">[]</span></td></tr><tr><th id="L141"><a href="#L141">141</a></th><td>        <span class="k">for</span> n <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span>graph_num_bars<span class="p">):</span></td></tr><tr><th id="L142"><a href="#L142">142</a></th><td>            value <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span>d<span class="p">[</span>n<span class="o">*</span>gspb<span class="p">:(</span>n<span class="o">+</span><span class="mf">1</span><span class="p">)</span><span class="o">*</span>gspb<span class="p">])</span><span class="o">/</span>gspb</td></tr><tr><th id="L143"><a href="#L143">143</a></th><td>            <span class="c"># toggle between two bar types</span></td></tr><tr><th id="L144"><a href="#L144">144</a></th><td>            <span class="k">if</span> n <span class="o">&amp;</span> <span class="mf">1</span><span class="p">:</span></td></tr><tr><th id="L145"><a href="#L145">145</a></th><td>                l<span class="o">.</span>append<span class="p">([</span><span class="mf">0</span><span class="p">,</span>value<span class="p">])</span></td></tr><tr><th id="L146"><a href="#L146">146</a></th><td>            <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L147"><a href="#L147">147</a></th><td>                l<span class="o">.</span>append<span class="p">([</span>value<span class="p">,</span><span class="mf">0</span><span class="p">])</span></td></tr><tr><th id="L148"><a href="#L148">148</a></th><td>        <span class="bp">self</span><span class="o">.</span>graph<span class="o">.</span>set_data<span class="p">(</span>l<span class="p">,</span>max_value<span class="p">)</span></td></tr><tr><th id="L149"><a href="#L149">149</a></th><td>        </td></tr><tr><th id="L150"><a href="#L150">150</a></th><td>        <span class="c"># also update progress</span></td></tr><tr><th id="L151"><a href="#L151">151</a></th><td>        <span class="k">if</span> <span class="p">(</span>o<span class="o">//</span>repeat<span class="p">)</span><span class="o">&amp;</span><span class="mf">1</span><span class="p">:</span></td></tr><tr><th id="L152"><a href="#L152">152</a></th><td>            <span class="c"># show 100% for first half, 0 for second half</span></td></tr><tr><th id="L153"><a href="#L153">153</a></th><td>            <span class="k">if</span> o<span class="o">%</span>repeat <span class="o">&gt;</span> repeat<span class="o">//</span><span class="mf">2</span><span class="p">:</span></td></tr><tr><th id="L154"><a href="#L154">154</a></th><td>                prog <span class="o">=</span> <span class="mf">0</span></td></tr><tr><th id="L155"><a href="#L155">155</a></th><td>            <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L156"><a href="#L156">156</a></th><td>                prog <span class="o">=</span> <span class="mf">1</span></td></tr><tr><th id="L157"><a href="#L157">157</a></th><td>        <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L158"><a href="#L158">158</a></th><td>            prog <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>o<span class="o">%</span>repeat<span class="p">)</span> <span class="o">/</span> repeat</td></tr><tr><th id="L159"><a href="#L159">159</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_progress<span class="o">.</span>set_completion<span class="p">(</span> prog <span class="p">)</span></td></tr><tr><th id="L160"><a href="#L160">160</a></th><td>        <span class="k">return</span> <span class="bp">True</span></td></tr><tr><th id="L161"><a href="#L161">161</a></th><td></td></tr><tr><th id="L162"><a href="#L162">162</a></th><td>    <span class="k">def</span> <span class="nf">on_animate_button</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> button<span class="p">):</span></td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>        <span class="sd">"""Toggle started state and button text."""</span></td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span>started<span class="p">:</span> <span class="c"># stop animation</span></td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>            button<span class="o">.</span>set_label<span class="p">(</span><span class="s">"Start"</span><span class="p">)</span></td></tr><tr><th id="L166"><a href="#L166">166</a></th><td>            <span class="bp">self</span><span class="o">.</span>offset <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>get_offset_now<span class="p">()</span></td></tr><tr><th id="L167"><a href="#L167">167</a></th><td>            <span class="bp">self</span><span class="o">.</span>started <span class="o">=</span> <span class="bp">False</span></td></tr><tr><th id="L168"><a href="#L168">168</a></th><td>            <span class="bp">self</span><span class="o">.</span>controller<span class="o">.</span>stop_animation<span class="p">()</span></td></tr><tr><th id="L169"><a href="#L169">169</a></th><td>        <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L170"><a href="#L170">170</a></th><td>            button<span class="o">.</span>set_label<span class="p">(</span><span class="s">"Stop"</span><span class="p">)</span></td></tr><tr><th id="L171"><a href="#L171">171</a></th><td>            <span class="bp">self</span><span class="o">.</span>started <span class="o">=</span> <span class="bp">True</span></td></tr><tr><th id="L172"><a href="#L172">172</a></th><td>            <span class="bp">self</span><span class="o">.</span>start_time <span class="o">=</span> time<span class="o">.</span>time<span class="p">()</span></td></tr><tr><th id="L173"><a href="#L173">173</a></th><td>            <span class="bp">self</span><span class="o">.</span>controller<span class="o">.</span>animate_graph<span class="p">()</span></td></tr><tr><th id="L174"><a href="#L174">174</a></th><td>            </td></tr><tr><th id="L175"><a href="#L175">175</a></th><td>    </td></tr><tr><th id="L176"><a href="#L176">176</a></th><td>    <span class="k">def</span> <span class="nf">on_reset_button</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> w<span class="p">):</span></td></tr><tr><th id="L177"><a href="#L177">177</a></th><td>        <span class="bp">self</span><span class="o">.</span>offset <span class="o">=</span> <span class="mf">0</span></td></tr><tr><th id="L178"><a href="#L178">178</a></th><td>        <span class="bp">self</span><span class="o">.</span>start_time <span class="o">=</span> time<span class="o">.</span>time<span class="p">()</span></td></tr><tr><th id="L179"><a href="#L179">179</a></th><td>        <span class="bp">self</span><span class="o">.</span>update_graph<span class="p">(</span><span class="bp">True</span><span class="p">)</span></td></tr><tr><th id="L180"><a href="#L180">180</a></th><td></td></tr><tr><th id="L181"><a href="#L181">181</a></th><td>    <span class="k">def</span> <span class="nf">on_mode_button</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> button<span class="p">,</span> state<span class="p">):</span></td></tr><tr><th id="L182"><a href="#L182">182</a></th><td>        <span class="sd">"""Notify the controller of a new mode setting."""</span></td></tr><tr><th id="L183"><a href="#L183">183</a></th><td>        <span class="k">if</span> state<span class="p">:</span></td></tr><tr><th id="L184"><a href="#L184">184</a></th><td>            <span class="c"># The new mode is the label of the button</span></td></tr><tr><th id="L185"><a href="#L185">185</a></th><td>            <span class="bp">self</span><span class="o">.</span>controller<span class="o">.</span>set_mode<span class="p">(</span> button<span class="o">.</span>get_label<span class="p">()</span> <span class="p">)</span></td></tr><tr><th id="L186"><a href="#L186">186</a></th><td>        <span class="bp">self</span><span class="o">.</span>last_offset <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L187"><a href="#L187">187</a></th><td></td></tr><tr><th id="L188"><a href="#L188">188</a></th><td>    <span class="k">def</span> <span class="nf">on_mode_change</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> m<span class="p">):</span></td></tr><tr><th id="L189"><a href="#L189">189</a></th><td>        <span class="sd">"""Handle external mode change by updating radio buttons."""</span></td></tr><tr><th id="L190"><a href="#L190">190</a></th><td>        <span class="k">for</span> rb <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span>mode_buttons<span class="p">:</span></td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>            <span class="k">if</span> rb<span class="o">.</span>get_label<span class="p">()</span> <span class="o">==</span> m<span class="p">:</span></td></tr><tr><th id="L192"><a href="#L192">192</a></th><td>                rb<span class="o">.</span>set_state<span class="p">(</span><span class="bp">True</span><span class="p">,</span> do_callback<span class="o">=</span><span class="bp">False</span><span class="p">)</span></td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>                <span class="k">break</span></td></tr><tr><th id="L194"><a href="#L194">194</a></th><td>        <span class="bp">self</span><span class="o">.</span>last_offset <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L195"><a href="#L195">195</a></th><td></td></tr><tr><th id="L196"><a href="#L196">196</a></th><td>    <span class="k">def</span> <span class="nf">on_unicode_checkbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> w<span class="p">,</span> state<span class="p">):</span></td></tr><tr><th id="L197"><a href="#L197">197</a></th><td>        <span class="bp">self</span><span class="o">.</span>graph <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>bar_graph<span class="p">(</span> state <span class="p">)</span></td></tr><tr><th id="L198"><a href="#L198">198</a></th><td>        <span class="bp">self</span><span class="o">.</span>graph_wrap<span class="o">.</span>_w <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>graph</td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_progress <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>progress_bar<span class="p">(</span> state <span class="p">)</span></td></tr><tr><th id="L200"><a href="#L200">200</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_progress_wrap<span class="o">.</span>_w <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>animate_progress</td></tr><tr><th id="L201"><a href="#L201">201</a></th><td>        <span class="bp">self</span><span class="o">.</span>update_graph<span class="p">(</span> <span class="bp">True</span> <span class="p">)</span></td></tr><tr><th id="L202"><a href="#L202">202</a></th><td>        </td></tr><tr><th id="L203"><a href="#L203">203</a></th><td></td></tr><tr><th id="L204"><a href="#L204">204</a></th><td>    <span class="k">def</span> <span class="nf">main_shadow</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> w<span class="p">):</span></td></tr><tr><th id="L205"><a href="#L205">205</a></th><td>        <span class="sd">"""Wrap a shadow and background around widget w."""</span></td></tr><tr><th id="L206"><a href="#L206">206</a></th><td>        bg <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span>urwid<span class="o">.</span>SolidFill<span class="p">(</span><span class="s">u"</span><span class="se">\u2592</span><span class="s">"</span><span class="p">),</span> <span class="s">'screen edge'</span><span class="p">)</span></td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>        shadow <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span>urwid<span class="o">.</span>SolidFill<span class="p">(</span><span class="s">u" "</span><span class="p">),</span> <span class="s">'main shadow'</span><span class="p">)</span></td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>        </td></tr><tr><th id="L209"><a href="#L209">209</a></th><td>        bg <span class="o">=</span> urwid<span class="o">.</span>Overlay<span class="p">(</span> shadow<span class="p">,</span> bg<span class="p">,</span></td></tr><tr><th id="L210"><a href="#L210">210</a></th><td>            <span class="p">(</span><span class="s">'fixed left'</span><span class="p">,</span> <span class="mf">3</span><span class="p">),</span> <span class="p">(</span><span class="s">'fixed right'</span><span class="p">,</span> <span class="mf">1</span><span class="p">),</span></td></tr><tr><th id="L211"><a href="#L211">211</a></th><td>            <span class="p">(</span><span class="s">'fixed top'</span><span class="p">,</span> <span class="mf">2</span><span class="p">),</span> <span class="p">(</span><span class="s">'fixed bottom'</span><span class="p">,</span> <span class="mf">1</span><span class="p">))</span></td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>Overlay<span class="p">(</span> w<span class="p">,</span> bg<span class="p">,</span></td></tr><tr><th id="L213"><a href="#L213">213</a></th><td>            <span class="p">(</span><span class="s">'fixed left'</span><span class="p">,</span> <span class="mf">2</span><span class="p">),</span> <span class="p">(</span><span class="s">'fixed right'</span><span class="p">,</span> <span class="mf">3</span><span class="p">),</span></td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>            <span class="p">(</span><span class="s">'fixed top'</span><span class="p">,</span> <span class="mf">1</span><span class="p">),</span> <span class="p">(</span><span class="s">'fixed bottom'</span><span class="p">,</span> <span class="mf">2</span><span class="p">))</span></td></tr><tr><th id="L215"><a href="#L215">215</a></th><td>        <span class="k">return</span> w</td></tr><tr><th id="L216"><a href="#L216">216</a></th><td>        </td></tr><tr><th id="L217"><a href="#L217">217</a></th><td>    <span class="k">def</span> <span class="nf">bar_graph</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> smooth<span class="o">=</span><span class="bp">False</span><span class="p">):</span></td></tr><tr><th id="L218"><a href="#L218">218</a></th><td>        satt <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L219"><a href="#L219">219</a></th><td>        <span class="k">if</span> smooth<span class="p">:</span></td></tr><tr><th id="L220"><a href="#L220">220</a></th><td>            satt <span class="o">=</span> <span class="p">{(</span><span class="mf">1</span><span class="p">,</span><span class="mf">0</span><span class="p">):</span> <span class="s">'bg 1 smooth'</span><span class="p">,</span> <span class="p">(</span><span class="mf">2</span><span class="p">,</span><span class="mf">0</span><span class="p">):</span> <span class="s">'bg 2 smooth'</span><span class="p">}</span></td></tr><tr><th id="L221"><a href="#L221">221</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>BarGraph<span class="p">([</span><span class="s">'bg background'</span><span class="p">,</span><span class="s">'bg 1'</span><span class="p">,</span><span class="s">'bg 2'</span><span class="p">],</span> satt<span class="o">=</span>satt<span class="p">)</span></td></tr><tr><th id="L222"><a href="#L222">222</a></th><td>        <span class="k">return</span> w</td></tr><tr><th id="L223"><a href="#L223">223</a></th><td></td></tr><tr><th id="L224"><a href="#L224">224</a></th><td>    <span class="k">def</span> <span class="nf">button</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> t<span class="p">,</span> fn<span class="p">):</span></td></tr><tr><th id="L225"><a href="#L225">225</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>Button<span class="p">(</span>t<span class="p">,</span> fn<span class="p">)</span></td></tr><tr><th id="L226"><a href="#L226">226</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span>w<span class="p">,</span> <span class="s">'button normal'</span><span class="p">,</span> <span class="s">'button select'</span><span class="p">)</span></td></tr><tr><th id="L227"><a href="#L227">227</a></th><td>        <span class="k">return</span> w</td></tr><tr><th id="L228"><a href="#L228">228</a></th><td></td></tr><tr><th id="L229"><a href="#L229">229</a></th><td>    <span class="k">def</span> <span class="nf">radio_button</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> g<span class="p">,</span> l<span class="p">,</span> fn<span class="p">):</span></td></tr><tr><th id="L230"><a href="#L230">230</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>RadioButton<span class="p">(</span>g<span class="p">,</span> l<span class="p">,</span> <span class="bp">False</span><span class="p">,</span> on_state_change<span class="o">=</span>fn<span class="p">)</span></td></tr><tr><th id="L231"><a href="#L231">231</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span>w<span class="p">,</span> <span class="s">'button normal'</span><span class="p">,</span> <span class="s">'button select'</span><span class="p">)</span></td></tr><tr><th id="L232"><a href="#L232">232</a></th><td>        <span class="k">return</span> w</td></tr><tr><th id="L233"><a href="#L233">233</a></th><td></td></tr><tr><th id="L234"><a href="#L234">234</a></th><td>    <span class="k">def</span> <span class="nf">progress_bar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> smooth<span class="o">=</span><span class="bp">False</span><span class="p">):</span></td></tr><tr><th id="L235"><a href="#L235">235</a></th><td>        <span class="k">if</span> smooth<span class="p">:</span></td></tr><tr><th id="L236"><a href="#L236">236</a></th><td>            <span class="k">return</span> urwid<span class="o">.</span>ProgressBar<span class="p">(</span><span class="s">'pg normal'</span><span class="p">,</span> <span class="s">'pg complete'</span><span class="p">,</span> </td></tr><tr><th id="L237"><a href="#L237">237</a></th><td>                <span class="mf">0</span><span class="p">,</span> <span class="mf">1</span><span class="p">,</span> <span class="s">'pg smooth'</span><span class="p">)</span></td></tr><tr><th id="L238"><a href="#L238">238</a></th><td>        <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L239"><a href="#L239">239</a></th><td>            <span class="k">return</span> urwid<span class="o">.</span>ProgressBar<span class="p">(</span><span class="s">'pg normal'</span><span class="p">,</span> <span class="s">'pg complete'</span><span class="p">,</span></td></tr><tr><th id="L240"><a href="#L240">240</a></th><td>                <span class="mf">0</span><span class="p">,</span> <span class="mf">1</span><span class="p">)</span></td></tr><tr><th id="L241"><a href="#L241">241</a></th><td></td></tr><tr><th id="L242"><a href="#L242">242</a></th><td>    <span class="k">def</span> <span class="nf">exit_program</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> w<span class="p">):</span></td></tr><tr><th id="L243"><a href="#L243">243</a></th><td>        <span class="k">raise</span> urwid<span class="o">.</span>ExitMainLoop<span class="p">()</span></td></tr><tr><th id="L244"><a href="#L244">244</a></th><td></td></tr><tr><th id="L245"><a href="#L245">245</a></th><td>    <span class="k">def</span> <span class="nf">graph_controls</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L246"><a href="#L246">246</a></th><td>        modes <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>controller<span class="o">.</span>get_modes<span class="p">()</span></td></tr><tr><th id="L247"><a href="#L247">247</a></th><td>        <span class="c"># setup mode radio buttons</span></td></tr><tr><th id="L248"><a href="#L248">248</a></th><td>        <span class="bp">self</span><span class="o">.</span>mode_buttons <span class="o">=</span> <span class="p">[]</span></td></tr><tr><th id="L249"><a href="#L249">249</a></th><td>        group <span class="o">=</span> <span class="p">[]</span></td></tr><tr><th id="L250"><a href="#L250">250</a></th><td>        <span class="k">for</span> m <span class="ow">in</span> modes<span class="p">:</span></td></tr><tr><th id="L251"><a href="#L251">251</a></th><td>            rb <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>radio_button<span class="p">(</span> group<span class="p">,</span> m<span class="p">,</span> <span class="bp">self</span><span class="o">.</span>on_mode_button <span class="p">)</span></td></tr><tr><th id="L252"><a href="#L252">252</a></th><td>            <span class="bp">self</span><span class="o">.</span>mode_buttons<span class="o">.</span>append<span class="p">(</span> rb <span class="p">)</span></td></tr><tr><th id="L253"><a href="#L253">253</a></th><td>        <span class="c"># setup animate button</span></td></tr><tr><th id="L254"><a href="#L254">254</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_button <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>button<span class="p">(</span> <span class="s">""</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span>on_animate_button<span class="p">)</span></td></tr><tr><th id="L255"><a href="#L255">255</a></th><td>        <span class="bp">self</span><span class="o">.</span>on_animate_button<span class="p">(</span> <span class="bp">self</span><span class="o">.</span>animate_button <span class="p">)</span></td></tr><tr><th id="L256"><a href="#L256">256</a></th><td>        <span class="bp">self</span><span class="o">.</span>offset <span class="o">=</span> <span class="mf">0</span></td></tr><tr><th id="L257"><a href="#L257">257</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_progress <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>progress_bar<span class="p">()</span></td></tr><tr><th id="L258"><a href="#L258">258</a></th><td>        animate_controls <span class="o">=</span> urwid<span class="o">.</span>GridFlow<span class="p">(</span> <span class="p">[</span> </td></tr><tr><th id="L259"><a href="#L259">259</a></th><td>            <span class="bp">self</span><span class="o">.</span>animate_button<span class="p">,</span></td></tr><tr><th id="L260"><a href="#L260">260</a></th><td>            <span class="bp">self</span><span class="o">.</span>button<span class="p">(</span><span class="s">"Reset"</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span>on_reset_button<span class="p">),</span></td></tr><tr><th id="L261"><a href="#L261">261</a></th><td>            <span class="p">],</span> <span class="mf">9</span><span class="p">,</span> <span class="mf">2</span><span class="p">,</span> <span class="mf">0</span><span class="p">,</span> <span class="s">'center'</span><span class="p">)</span></td></tr><tr><th id="L262"><a href="#L262">262</a></th><td>        </td></tr><tr><th id="L263"><a href="#L263">263</a></th><td>        <span class="k">if</span> urwid<span class="o">.</span>get_encoding_mode<span class="p">()</span> <span class="o">==</span> <span class="s">"utf8"</span><span class="p">:</span></td></tr><tr><th id="L264"><a href="#L264">264</a></th><td>            unicode_checkbox <span class="o">=</span> urwid<span class="o">.</span>CheckBox<span class="p">(</span></td></tr><tr><th id="L265"><a href="#L265">265</a></th><td>                <span class="s">"Enable Unicode Graphics"</span><span class="p">,</span></td></tr><tr><th id="L266"><a href="#L266">266</a></th><td>                on_state_change<span class="o">=</span><span class="bp">self</span><span class="o">.</span>on_unicode_checkbox<span class="p">)</span></td></tr><tr><th id="L267"><a href="#L267">267</a></th><td>        <span class="k">else</span><span class="p">:</span></td></tr><tr><th id="L268"><a href="#L268">268</a></th><td>            unicode_checkbox <span class="o">=</span> urwid<span class="o">.</span>Text<span class="p">(</span></td></tr><tr><th id="L269"><a href="#L269">269</a></th><td>                <span class="s">"UTF-8 encoding not detected"</span><span class="p">)</span></td></tr><tr><th id="L270"><a href="#L270">270</a></th><td>            </td></tr><tr><th id="L271"><a href="#L271">271</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_progress_wrap <span class="o">=</span> urwid<span class="o">.</span>WidgetWrap<span class="p">(</span></td></tr><tr><th id="L272"><a href="#L272">272</a></th><td>            <span class="bp">self</span><span class="o">.</span>animate_progress<span class="p">)</span></td></tr><tr><th id="L273"><a href="#L273">273</a></th><td>        </td></tr><tr><th id="L274"><a href="#L274">274</a></th><td>        l <span class="o">=</span> <span class="p">[</span>    urwid<span class="o">.</span>Text<span class="p">(</span><span class="s">"Mode"</span><span class="p">,</span>align<span class="o">=</span><span class="s">"center"</span><span class="p">),</span></td></tr><tr><th id="L275"><a href="#L275">275</a></th><td>            <span class="p">]</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span>mode_buttons <span class="o">+</span> <span class="p">[</span></td></tr><tr><th id="L276"><a href="#L276">276</a></th><td>            urwid<span class="o">.</span>Divider<span class="p">(),</span></td></tr><tr><th id="L277"><a href="#L277">277</a></th><td>            urwid<span class="o">.</span>Text<span class="p">(</span><span class="s">"Animation"</span><span class="p">,</span>align<span class="o">=</span><span class="s">"center"</span><span class="p">),</span></td></tr><tr><th id="L278"><a href="#L278">278</a></th><td>            animate_controls<span class="p">,</span></td></tr><tr><th id="L279"><a href="#L279">279</a></th><td>            <span class="bp">self</span><span class="o">.</span>animate_progress_wrap<span class="p">,</span></td></tr><tr><th id="L280"><a href="#L280">280</a></th><td>            urwid<span class="o">.</span>Divider<span class="p">(),</span></td></tr><tr><th id="L281"><a href="#L281">281</a></th><td>            urwid<span class="o">.</span>LineBox<span class="p">(</span> unicode_checkbox <span class="p">),</span></td></tr><tr><th id="L282"><a href="#L282">282</a></th><td>            urwid<span class="o">.</span>Divider<span class="p">(),</span></td></tr><tr><th id="L283"><a href="#L283">283</a></th><td>            <span class="bp">self</span><span class="o">.</span>button<span class="p">(</span><span class="s">"Quit"</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span>exit_program <span class="p">),</span></td></tr><tr><th id="L284"><a href="#L284">284</a></th><td>            <span class="p">]</span></td></tr><tr><th id="L285"><a href="#L285">285</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>ListBox<span class="p">(</span>urwid<span class="o">.</span>SimpleListWalker<span class="p">(</span>l<span class="p">))</span></td></tr><tr><th id="L286"><a href="#L286">286</a></th><td>        <span class="k">return</span> w</td></tr><tr><th id="L287"><a href="#L287">287</a></th><td></td></tr><tr><th id="L288"><a href="#L288">288</a></th><td>    <span class="k">def</span> <span class="nf">main_window</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> </td></tr><tr><th id="L289"><a href="#L289">289</a></th><td>        <span class="bp">self</span><span class="o">.</span>graph <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>bar_graph<span class="p">()</span></td></tr><tr><th id="L290"><a href="#L290">290</a></th><td>        <span class="bp">self</span><span class="o">.</span>graph_wrap <span class="o">=</span> urwid<span class="o">.</span>WidgetWrap<span class="p">(</span> <span class="bp">self</span><span class="o">.</span>graph <span class="p">)</span></td></tr><tr><th id="L291"><a href="#L291">291</a></th><td>        vline <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span> urwid<span class="o">.</span>SolidFill<span class="p">(</span><span class="s">u'</span><span class="se">\u2502</span><span class="s">'</span><span class="p">),</span> <span class="s">'line'</span><span class="p">)</span></td></tr><tr><th id="L292"><a href="#L292">292</a></th><td>        c <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>graph_controls<span class="p">()</span></td></tr><tr><th id="L293"><a href="#L293">293</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>Columns<span class="p">([(</span><span class="s">'weight'</span><span class="p">,</span><span class="mf">2</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span>graph_wrap<span class="p">),</span></td></tr><tr><th id="L294"><a href="#L294">294</a></th><td>            <span class="p">(</span><span class="s">'fixed'</span><span class="p">,</span><span class="mf">1</span><span class="p">,</span>vline<span class="p">),</span> c<span class="p">],</span></td></tr><tr><th id="L295"><a href="#L295">295</a></th><td>            dividechars<span class="o">=</span><span class="mf">1</span><span class="p">,</span> focus_column<span class="o">=</span><span class="mf">2</span><span class="p">)</span></td></tr><tr><th id="L296"><a href="#L296">296</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>Padding<span class="p">(</span>w<span class="p">,(</span><span class="s">'fixed left'</span><span class="p">,</span><span class="mf">1</span><span class="p">),(</span><span class="s">'fixed right'</span><span class="p">,</span><span class="mf">0</span><span class="p">))</span></td></tr><tr><th id="L297"><a href="#L297">297</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span>w<span class="p">,</span><span class="s">'body'</span><span class="p">)</span></td></tr><tr><th id="L298"><a href="#L298">298</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>LineBox<span class="p">(</span>w<span class="p">)</span></td></tr><tr><th id="L299"><a href="#L299">299</a></th><td>        w <span class="o">=</span> urwid<span class="o">.</span>AttrWrap<span class="p">(</span>w<span class="p">,</span><span class="s">'line'</span><span class="p">)</span></td></tr><tr><th id="L300"><a href="#L300">300</a></th><td>        w <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>main_shadow<span class="p">(</span>w<span class="p">)</span></td></tr><tr><th id="L301"><a href="#L301">301</a></th><td>        <span class="k">return</span> w</td></tr><tr><th id="L302"><a href="#L302">302</a></th><td>        </td></tr><tr><th id="L303"><a href="#L303">303</a></th><td></td></tr><tr><th id="L304"><a href="#L304">304</a></th><td><span class="k">class</span> <span class="nc">GraphController</span><span class="p">:</span></td></tr><tr><th id="L305"><a href="#L305">305</a></th><td>    <span class="sd">"""</span></td></tr><tr><th id="L306"><a href="#L306">306</a></th><td><span class="sd">    A class responsible for setting up the model and view and running</span></td></tr><tr><th id="L307"><a href="#L307">307</a></th><td><span class="sd">    the application.</span></td></tr><tr><th id="L308"><a href="#L308">308</a></th><td><span class="sd">    """</span></td></tr><tr><th id="L309"><a href="#L309">309</a></th><td>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L310"><a href="#L310">310</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_alarm <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L311"><a href="#L311">311</a></th><td>        <span class="bp">self</span><span class="o">.</span>model <span class="o">=</span> GraphModel<span class="p">()</span></td></tr><tr><th id="L312"><a href="#L312">312</a></th><td>        <span class="bp">self</span><span class="o">.</span>view <span class="o">=</span> GraphView<span class="p">(</span> <span class="bp">self</span> <span class="p">)</span></td></tr><tr><th id="L313"><a href="#L313">313</a></th><td>        <span class="c"># use the first mode as the default</span></td></tr><tr><th id="L314"><a href="#L314">314</a></th><td>        mode <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>get_modes<span class="p">()[</span><span class="mf">0</span><span class="p">]</span></td></tr><tr><th id="L315"><a href="#L315">315</a></th><td>        <span class="bp">self</span><span class="o">.</span>model<span class="o">.</span>set_mode<span class="p">(</span> mode <span class="p">)</span></td></tr><tr><th id="L316"><a href="#L316">316</a></th><td>        <span class="c"># update the view</span></td></tr><tr><th id="L317"><a href="#L317">317</a></th><td>        <span class="bp">self</span><span class="o">.</span>view<span class="o">.</span>on_mode_change<span class="p">(</span> mode <span class="p">)</span></td></tr><tr><th id="L318"><a href="#L318">318</a></th><td>        <span class="bp">self</span><span class="o">.</span>view<span class="o">.</span>update_graph<span class="p">(</span><span class="bp">True</span><span class="p">)</span></td></tr><tr><th id="L319"><a href="#L319">319</a></th><td></td></tr><tr><th id="L320"><a href="#L320">320</a></th><td>    <span class="k">def</span> <span class="nf">get_modes</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L321"><a href="#L321">321</a></th><td>        <span class="sd">"""Allow our view access to the list of modes."""</span></td></tr><tr><th id="L322"><a href="#L322">322</a></th><td>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span>model<span class="o">.</span>get_modes<span class="p">()</span></td></tr><tr><th id="L323"><a href="#L323">323</a></th><td>    </td></tr><tr><th id="L324"><a href="#L324">324</a></th><td>    <span class="k">def</span> <span class="nf">set_mode</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> m<span class="p">):</span></td></tr><tr><th id="L325"><a href="#L325">325</a></th><td>        <span class="sd">"""Allow our view to set the mode."""</span></td></tr><tr><th id="L326"><a href="#L326">326</a></th><td>        rval <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>model<span class="o">.</span>set_mode<span class="p">(</span> m <span class="p">)</span></td></tr><tr><th id="L327"><a href="#L327">327</a></th><td>        <span class="bp">self</span><span class="o">.</span>view<span class="o">.</span>update_graph<span class="p">(</span><span class="bp">True</span><span class="p">)</span></td></tr><tr><th id="L328"><a href="#L328">328</a></th><td>        <span class="k">return</span> rval</td></tr><tr><th id="L329"><a href="#L329">329</a></th><td>    </td></tr><tr><th id="L330"><a href="#L330">330</a></th><td>    <span class="k">def</span> <span class="nf">get_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> offset<span class="p">,</span> <span class="nb">range</span><span class="p">):</span></td></tr><tr><th id="L331"><a href="#L331">331</a></th><td>        <span class="sd">"""Provide data to our view for the graph."""</span></td></tr><tr><th id="L332"><a href="#L332">332</a></th><td>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span>model<span class="o">.</span>get_data<span class="p">(</span> offset<span class="p">,</span> <span class="nb">range</span> <span class="p">)</span></td></tr><tr><th id="L333"><a href="#L333">333</a></th><td>    </td></tr><tr><th id="L334"><a href="#L334">334</a></th><td></td></tr><tr><th id="L335"><a href="#L335">335</a></th><td>    <span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L336"><a href="#L336">336</a></th><td>        <span class="bp">self</span><span class="o">.</span>loop <span class="o">=</span> urwid<span class="o">.</span>MainLoop<span class="p">(</span><span class="bp">self</span><span class="o">.</span>view<span class="p">,</span> <span class="bp">self</span><span class="o">.</span>view<span class="o">.</span>palette<span class="p">)</span></td></tr><tr><th id="L337"><a href="#L337">337</a></th><td>        <span class="bp">self</span><span class="o">.</span>loop<span class="o">.</span>run<span class="p">()</span></td></tr><tr><th id="L338"><a href="#L338">338</a></th><td></td></tr><tr><th id="L339"><a href="#L339">339</a></th><td>    <span class="k">def</span> <span class="nf">animate_graph</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> loop<span class="o">=</span><span class="bp">None</span><span class="p">,</span> user_data<span class="o">=</span><span class="bp">None</span><span class="p">):</span></td></tr><tr><th id="L340"><a href="#L340">340</a></th><td>        <span class="sd">"""update the graph and schedule the next update"""</span></td></tr><tr><th id="L341"><a href="#L341">341</a></th><td>        <span class="bp">self</span><span class="o">.</span>view<span class="o">.</span>update_graph<span class="p">()</span></td></tr><tr><th id="L342"><a href="#L342">342</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_alarm <span class="o">=</span> <span class="bp">self</span><span class="o">.</span>loop<span class="o">.</span>set_alarm_in<span class="p">(</span></td></tr><tr><th id="L343"><a href="#L343">343</a></th><td>            UPDATE_INTERVAL<span class="p">,</span> <span class="bp">self</span><span class="o">.</span>animate_graph<span class="p">)</span></td></tr><tr><th id="L344"><a href="#L344">344</a></th><td></td></tr><tr><th id="L345"><a href="#L345">345</a></th><td>    <span class="k">def</span> <span class="nf">stop_animation</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></td></tr><tr><th id="L346"><a href="#L346">346</a></th><td>        <span class="sd">"""stop animating the graph"""</span></td></tr><tr><th id="L347"><a href="#L347">347</a></th><td>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span>animate_alarm<span class="p">:</span></td></tr><tr><th id="L348"><a href="#L348">348</a></th><td>            <span class="bp">self</span><span class="o">.</span>loop<span class="o">.</span>remove_alarm<span class="p">(</span><span class="bp">self</span><span class="o">.</span>animate_alarm<span class="p">)</span></td></tr><tr><th id="L349"><a href="#L349">349</a></th><td>        <span class="bp">self</span><span class="o">.</span>animate_alarm <span class="o">=</span> <span class="bp">None</span></td></tr><tr><th id="L350"><a href="#L350">350</a></th><td>    </td></tr><tr><th id="L351"><a href="#L351">351</a></th><td></td></tr><tr><th id="L352"><a href="#L352">352</a></th><td><span class="k">def</span> <span class="nf">main</span><span class="p">():</span></td></tr><tr><th id="L353"><a href="#L353">353</a></th><td>    GraphController<span class="p">()</span><span class="o">.</span>main<span class="p">()</span></td></tr><tr><th id="L354"><a href="#L354">354</a></th><td>    </td></tr><tr><th id="L355"><a href="#L355">355</a></th><td><span class="k">if</span> <span class="s">'__main__'</span><span class="o">==</span>__name__<span class="p">:</span></td></tr><tr><th id="L356"><a href="#L356">356</a></th><td>    main<span class="p">()</span></td></tr></tbody></table>
      </div>
      <div id="help">
        <strong>Note:</strong> See <a href="/urwid/wiki/TracBrowser">TracBrowser</a>
        for help on using the browser.
      </div>
      <div id="anydiff">
        <form action="/urwid/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/examples/graph.py" />
            <input type="hidden" name="old_path" value="/examples/graph.py" />
            <input type="hidden" name="new_rev" value="661:24cf14eac74f" />
            <input type="hidden" name="old_rev" value="661:24cf14eac74f" />
            <input type="submit" value="View changes..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/urwid/browser/examples/graph.py?format=txt">Plain Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/urwid/export/984%3Ad6071ec65299/examples/graph.py">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/urwid/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/urwid/about"><strong>Trac 0.11.3</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right"><a href="http://excess.org/urwid/">Urwid</a> - Console User Interface Library for Python</p>
    </div>
  </body>
</html>